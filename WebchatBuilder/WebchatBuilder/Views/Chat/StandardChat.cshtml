@model WebchatBuilder.ViewModels.ChatTemplateViewModel
@{
    Layout = null;
    var title = Model.Title;
    var domain = Model.Domain.TrimEnd('/');
    var launchIconOverridePath = String.IsNullOrWhiteSpace(Model.LaunchIconOverridePath) ? "" : domain + Model.LaunchIconOverridePath;
    var audioFilePath = domain + "/Audio/alert.mp3";
    var dottedIconPath = domain + "/Content/Images/dotdotdot.png";    
    var imgClass = "wcb-chat-btn wcb-chat-btn-icons";
    if (Model.UseUnstyledHeaderIcons)
    {
        imgClass = "wcb-chat-btn wcb-chat-btn-icon-only";
    }
    var printIconSrc = !String.IsNullOrWhiteSpace(Model.PrintButtonIconPath) ? domain + Model.PrintButtonIconPath : domain + "/Content/Images/print.png";
    var emailIconSrc = !String.IsNullOrWhiteSpace(Model.EmailButtonIconPath) ? domain + Model.EmailButtonIconPath : domain + "/Content/Images/email.png";
}

<div id="wcb-body">
    @if (Model.EnableAudioAlerts)
    {
        <audio id="wcb-audio-alert" src="@audioFilePath" preload="auto"></audio>
    }
    <div id="wcb-error">@Model.ErrorText</div>
    <div id="wcb-chat-container">
        @*<div id="wcb-chat-disconnect" title="End Chat"></div>*@
        @if (!Model.HideHeader)
        {
            var closeIconSrc = domain + Model.CloseButtonIconPath;
            var disconnectIconSrc = domain + Model.DisconnectButtonIconPath;
            
            <div id="wcb-chat-header">
                <div id="wcb-chat-header-left">
                    @if (!String.IsNullOrEmpty(Model.HeaderLogoPath))
                    {
                        var logoSrc = domain + Model.HeaderLogoPath;
                        <img src="@logoSrc" alt="chat logo"/>
                    }
                    @if (!String.IsNullOrEmpty(Model.HeaderText))
                    {
                        <h2>@Model.HeaderText</h2>
                    }

                </div>
                @if (Model.HeaderIcons)
                {
                    <div id="wcb-chat-header-right">
                        @if (Model.IncludeDisconnect)
                        {
                            <div class="@imgClass" id="wcb-chat-disconnect" title="@Model.DisconnectButtonTitle">
                                <img src="@disconnectIconSrc" alt="disconnect chat icon" />
                            </div>
                        }
                        <div class="@imgClass" id="wcb-exit-btn" title="@Model.CloseButtonTitle">
                            <img src="@closeIconSrc" alt="close chat icon"/>
                        </div>
                        @if (Model.IncludePrint && !Model.ShowOptionsButton)
                        {
                            <div class="@imgClass" id="wcb-print-btn" title="Print">
                                <img src="@printIconSrc" alt="print chat icon"/>
                            </div>
                        }
                        @if (Model.IncludeTranscript && !Model.ShowOptionsButton)
                        {
                            <div class="@imgClass" id="wcb-transcript-btn" title="Email Transcript">
                                <img src="@emailIconSrc" alt="email chat transcript icon"/>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div id="wcb-chat-header-right" class="wcb-chat-header-show-text">
                        @if (Model.IncludeDisconnect)
                        {
                            <div class="wcb-chat-btn" id="wcb-chat-disconnect" title="@Model.DisconnectButtonTitle">
                                <span>End Chat</span><img src="@disconnectIconSrc" alt="disconnect chat icon" />
                            </div>
                        }
                        <div class="wcb-chat-btn" id="wcb-exit-btn" title="@Model.CloseButtonTitle">
                            <span>Close Chat</span><img src="@closeIconSrc" alt="close chat icon" />
                        </div>
                        @if (Model.IncludePrint && !Model.ShowOptionsButton)
                        {
                            <div class="wcb-chat-btn" id="wcb-print-btn" title="Print">
                                <span>Print</span><img src="@printIconSrc" alt="print chat icon" />
                            </div>
                        }
                        @if (Model.IncludeTranscript && !Model.ShowOptionsButton)
                        {
                            <div class="wcb-chat-btn" id="wcb-transcript-btn" title="Email Transcript">
                                <span>Email</span><img src="@emailIconSrc" alt="email chat transcript icon" />
                            </div>
                        }
                    </div>

                }
            </div>
        }

        <div id="wcb-chat-body">
        </div>
        @{
            var agentName = Model.DefaultAgentName;
        }
        <div id="wcb-chat-agent-typing">
            <span id="wcb-chat-agent-name">@agentName</span> is typing...
        </div>
        <div id="wcb-chat-entry">
            @if (Model.ShowOptionsButton && (Model.IncludePrint || Model.IncludeTranscript))
            {
                <div id="wcb-chat-options">
                    <div id="wcb-chat-options-wrapper">
                        <div id="wcb-chat-dotdotdot" title="Chat Options">
                            <img src="@dottedIconPath" alt="chat options icon"/>
                        </div>
                        <div id="wcb-chat-option-btn-wrapper">
                            @if (Model.IncludePrint)
                            {
                                <div class="@imgClass" id="wcb-print-btn" title="Print"><img src="@printIconSrc" alt="print chat icon"/>
                                </div>
                            }
                            @if (Model.IncludeTranscript)
                            {
                                <div class="@imgClass" id="wcb-transcript-btn" title="Email Transcript"><img src="@emailIconSrc" alt="email chat transcript icon" />
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            @{
                var entryRightInline = Model.HideSendButton ? "display:none !important;" : "";
                var entryLeftInline = Model.HideSendButton ? "width: 100% !important; float: none !important; margin: 0 !important;" : "";
            }
            <div id="wcb-chat-entry-left" style="@entryLeftInline">
                @if (!String.IsNullOrEmpty(Model.PlaceholderText))
                {
                    <textarea id="wcb-chat-entry-text" placeholder="@Model.PlaceholderText"></textarea>
                }
                else
                {
                    <textarea id="wcb-chat-entry-text"></textarea>
                }
            </div>
            <div id="wcb-chat-entry-right" style="@entryRightInline">
                @{
                    var classDisabled = "disabled";
                    if (Model.EnableSendAndQueueChatsBeforeAgent)
                    {
                        classDisabled = "";
                    }
                }
                <div id="wcb-chat-entry-btn" class="wcb-chat-btn @classDisabled">
                    @if (Model.SendIncludeIcon)
                    {
                        var iconPath = "/Content/Images/paper-plane.png";
                        if (!String.IsNullOrEmpty(Model.SendButtonIcon))
                        {
                            iconPath = Model.SendButtonIcon;
                        }
                        var iconSrc = domain + iconPath;
                        <div id="wcb-chat-entry-btn-wrapper">
                            <img src="@iconSrc" alt="chat send icon"/>
                            <div>Send</div>
                        </div>
                    }
                    else
                    {
                        <div id="wcb-chat-entry-btn-wrapper2">
                            <div>Send</div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script id="sent-template" type="text/x-handlebars-template">
    <div class="chat-sent">
        <div class="chat-msg-icon">
            @if (Model.ShowInitials)
            {
                <div class="chat-msg-initial-wrapper">
                    <div class="chat-msg-initials">{{initials}}</div>
                </div>
            }
            else
            {
                <img src="@domain{{imgsrc}}" alt="chat avatar" />
            }
            <div class="chat-display-name">
                {{name}}
                {{#if time}}
                <div class="chat-display-time">{{time}}</div>
                {{/if}}
            </div>
        </div>
        @if (Model.MessageArrows)
        {
            <div class="chat-msg-text"><div class="chat-msg-arrow"></div>{{text}}</div>
        }
        else
        {
            <div class="chat-msg-text chat-msg-text-rnd"><div class="chat-msg-pointer"></div>{{text}}</div>
        }
    </div>
</script>
<script id="received-template" type="text/x-handlebars-template">
    <div class="chat-received">
        <div class="chat-msg-icon">
            @if (Model.ShowInitials)
            {
                <div class="chat-msg-initial-wrapper">
                    <div class="chat-msg-initials">{{initials}}</div>
                </div>
            }
            else
            {
                <img src="@domain{{imgsrc}}" alt="chat avatar" />
            }
            <div class="chat-display-name">
                {{name}}
                {{#if time}}
                <div class="chat-display-time">{{time}}</div>
                {{/if}}
            </div>
        </div>
        @if (Model.MessageArrows)
        {
            <div class="chat-msg-text"><div class="chat-msg-arrow"></div>{{text}}</div>
        }
        else
        {
            <div class="chat-msg-text chat-msg-text-rnd"><div class="chat-msg-pointer"></div>{{text}}</div>
        }
    </div>
</script>
@Html.Hidden("wcb-show-time", Model.ShowTime, new { data_value = Json.Encode(Model.ShowTime) })
@Html.Hidden("wcb-in-test-mode", Model.TestMode, new { data_value = Json.Encode(Model.TestMode) })
@Html.Hidden("wcb-user-name", Model.UserName, new { data_value = Model.UserName })
@Html.Hidden("wcb-session-id", Model.SessionId, new { data_value = Model.SessionId })
@Html.Hidden("wcb-chat-profile-name", Model.Profile, new { data_value = Model.Profile })
@Html.Hidden("wcb-chat-launch-text", Model.LaunchTextOverride, new { data_value = Model.LaunchTextOverride })
@Html.Hidden("wcb-chat-tooltip-text", Model.TooltipOverrideText, new { data_value = Model.TooltipOverrideText })
@Html.Hidden("wcb-chat-launch-icon", launchIconOverridePath, new { data_value = launchIconOverridePath })
@Html.Hidden("wcb-chat-browser-alerts", Model.EnableBrowserAlerts, new { data_value = Json.Encode(Model.EnableBrowserAlerts) })
@Html.Hidden("wcb-show-custom-info", Model.ShowCustomInfoOnReload, new { data_value = Json.Encode(Model.ShowCustomInfoOnReload) })
@Html.Hidden("wcb-show-initial-info", Model.ShowCustomInfoOnLoad, new { data_value = Json.Encode(Model.ShowCustomInfoOnLoad) })

@*@Html.Hidden("wcb-chat-show-disconnect", Model.ShowHardDisconnect, new { data_value = Json.Encode(Model.ShowHardDisconnect) })*@
